version: '3'

networks:
  monitor-net: 
    driver: bridge
  #prometheus-net:
  #  external: false

#volumes:
#    prometheus_data: {}
#    grafana_data: {}

services:
  agent:
      container_name: newrelic-infra
      build:
        context: ./newrelic-infra-setup
        dockerfile: ./newrelic-infra.dockerfile
      cap_add:
        - SYS_PTRACE
      network_mode: host
      pid: host
      privileged: true
      volumes:
        - "/:/host:ro"
        - "/var/run/docker.sock:/var/run/docker.sock"
      restart: unless-stopped
  reverse-proxy-test-container:
    image: 447993352427.dkr.ecr.ap-northeast-2.amazonaws.com/reserve-proxy-test:latest
    build:
      context: ./nginx
    ports:
      - 80:80
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logrotate.conf:/etc/logrotate.conf
    environment:
      TZ: Asia/Seoul
    external_links:
      - mauve-test-container
  mauve-test-container:
    image: 447993352427.dkr.ecr.ap-northeast-2.amazonaws.com/mauve-test:latest
    build:
      context: ./app
    ports:
      - '3000:3000'
      - '3030:3030'
    networks:
      - monitor-net
  
  #loki:
  #  image: grafana/loki:2.2.0
  #  volumes:
  #    - ./loki/conf:/etc/loki
  #  ports:
  #    - "3100:3100"
  #  command: -config.file=/etc/loki/loki-config.yaml
  #  networks:
  #    - monitor-net

  #promtail:
  #  image: grafana/promtail:2.2.0
  #  environment:
  #    - TZ=Asia/Seoul
  #  volumes:
  #    - ./loki/conf:/etc/promtail
  #    - ./app/logs:/var/log
  #  command: -config.file=/etc/promtail/promtail-config.yaml
  #  networks:
  #    - monitor-net
