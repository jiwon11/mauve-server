version: '3'

networks:
  monitor-net:
    #driver: bridge
  prometheus-net:
    external: false

volumes:
    prometheus_data: {}
    grafana_data: {}
services:
  #node:
  #  image: prom/node-exporter
  #  container_name: node-exporter
  #  ports:
  #    - 9101:9100
  #  networks:
  #    - prometheus-network

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - '9090:9090'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    ports:
      - '9093:9093'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    ports:
      - '9100:9100'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: zcube/cadvisor:latest
    container_name: cadvisor
    privileged: true
    links:
      - mauve-app-container
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /var/run/docker.sock:/var/run/docker.sock:rw
    devices:
      - "/dev/kmsg"
    ports:
      - '8080:8080'
    command: ["--logtostderr=true", "--docker_only=true", "--v=1"]
    restart: unless-stopped
    networks:
        - prometheus-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    env_file:
    - config
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 1234
    ports:
      - '1234:1234'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.2.0
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  #caddy:
  #  image: stefanprodan/caddy
  #  container_name: caddy
  #  platform: linux/amd64
  #  ports:
  #    - "1234:1234"
  #    - "9090:9090"
  #    - "9093:9093"
  #    - "8080:8080"
  #    - "9091:9091"
  #  volumes:
  #    - ./caddy:/etc/caddy
  #  environment:
  #    - ADMIN_USER=${ADMIN_USER}
  #    - ADMIN_PASSWORD=${ADMIN_PASSWORD}
  #  restart: unless-stopped
  #  networks:
  #    - monitor-net
  #  labels:
  #    org.label-schema.group: "monitoring"
  reverse-proxy-container:
    image: 447993352427.dkr.ecr.ap-northeast-2.amazonaws.com/reverse-proxy:latest
    build:
      context: ./nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logrotate.conf:/etc/logrotate.conf
    environment:
      TZ: Asia/Seoul
    links:
      - mauve-app-container
      - prometheus
      - alertmanager
      - nodeexporter
      - cadvisor
      - grafana
      - pushgateway
    depends_on:
      - mauve-app-container
  mauve-app-container:
    image: 447993352427.dkr.ecr.ap-northeast-2.amazonaws.com/mauve-app:latest
    build:
      context: ./app
    ports:
      - '3000:3000'
      - '3030:3030'
    networks:
      - default
  
  loki:
    image: grafana/loki:2.2.0
    volumes:
      - ./loki/conf:/etc/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - monitor-net

  promtail:
    image: grafana/promtail:2.2.0
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./loki/conf:/etc/promtail
      - ./app/logs:/var/log
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - monitor-net
